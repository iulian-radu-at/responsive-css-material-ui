{"version":3,"file":"main.3948da39f3ab94542d67.bundle.js","sources":["webpack:///./src/ResponsiveCssMaterialUi.tsx"],"sourcesContent":["import * as React from 'react';\nimport withWidth from '@material-ui/core/withWidth';\n\nconst ResponsiveCssMaterialUi = (props: ResponsiveCssMaterialUiProps) => {\n  React.Children.only(props.children);\n\n  const css: React.CSSProperties | undefined = getCss(props);\n\n  const newChild: React.ReactElement[] = React.Children.map(props.children, (child: React.ReactElement<any>) => {\n    let newStyle: React.CSSProperties | undefined = child.props.style;\n    if (!!css) {\n      newStyle = !newStyle ? css : { ...newStyle, ...css };\n    }\n    return React.cloneElement(child, { style: newStyle });\n  });\n\n  return <React.Fragment>{newChild}</React.Fragment>;\n};\n\nconst getCss = (props: ResponsiveCssMaterialUiProps): React.CSSProperties | undefined => {\n  console.log({ w: props.width });\n  switch (props.width) {\n    case 'xl':\n      if (!!props.xl) {\n        return props.xl;\n      }\n    case 'lg':\n      if (!!props.lg) {\n        return props.lg;\n      }\n    case 'md':\n      if (!!props.md) {\n        return props.md;\n      }\n    case 'sm':\n      if (!!props.sm) {\n        return props.sm;\n      }\n    case 'xs':\n    default:\n      if (!!props.xs) {\n        return props.xs;\n      }\n  }\n};\n\ninterface ResponsiveCssMaterialUiProps extends React.Props<any> {\n  lg?: React.CSSProperties;\n  md?: React.CSSProperties;\n  sm?: React.CSSProperties;\n  width: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  xl?: React.CSSProperties;\n  xs?: React.CSSProperties;\n}\n\nexport default withWidth()(ResponsiveCssMaterialUi);\n"],"mappings":"AAmBA","sourceRoot":""}